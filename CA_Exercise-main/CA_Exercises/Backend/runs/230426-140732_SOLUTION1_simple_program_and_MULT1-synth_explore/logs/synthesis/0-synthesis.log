
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.27+30 (git sha1 e56dad56c, x86_64-conda-linux-gnu-cc 11.2.0 -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/root/conda-eda/conda-eda/workdir/conda-env/conda-bld/yosys_1681341442694/work=/usr/local/src/conda/yosys-0.27_33_ge56dad56c -fdebug-prefix-map=/users/students/r0757781/Documents/COMP-ARCH/CA_Exercise-main/CA_Exercises/Backend/conda-env=/usr/local/src/conda-prefix -fPIC -Os -fno-merge-constants)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: OpenRAM_output/sky130_sram_2rw_64x128_64_TT_1p8V_25C.lib
Imported 1 cell types from liberty file.

2. Executing Liberty frontend: OpenRAM_output/sky130_sram_2rw_32x128_32_TT_1p8V_25C.lib
Imported 1 cell types from liberty file.

3. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/alu.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/alu.v' to AST representation.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/alu_control.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/alu_control.v' to AST representation.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/branch_unit.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/branch_unit.v' to AST representation.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/control_unit.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/control_unit.v' to AST representation.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/cpu.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/cpu.v' to AST representation.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/immediate_extend_unit.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/immediate_extend_unit.v' to AST representation.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/mux_2.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/mux_2.v' to AST representation.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/pc.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/pc.v' to AST representation.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/reg_arstn.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/reg_arstn.v' to AST representation.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/reg_arstn_en.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/reg_arstn_en.v' to AST representation.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/register_file.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/register_file.v' to AST representation.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/sram.v
Parsing SystemVerilog input from `../Verilog/RTL_SOLUTION1_simple_program_and_MULT1/sram.v' to AST representation.
Successfully finished Verilog frontend.
ERROR: No such module: cpu
ERROR: TCL interpreter returned an error: Yosys command produced an error
